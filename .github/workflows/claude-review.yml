name: Claude Review
on:
  issue_comment:
    types: [created]

jobs:
  review:
    if: contains(github.event.comment.body, '@claude')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write   # даёт право комментировать PR
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get PR diff (limited)
        run: |
          # Берём только первые 2000 строк diff, чтобы не перегружать API
          gh pr diff ${{ github.event.issue.number }} | head -n 2000 > diff.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare request for Claude
        run: |
          # Экранируем diff в JSON-строку
          jq -Rs . < diff.txt > diff.json

          # Формируем JSON-запрос с плейсхолдером
          cat > request.json <<'EOF'
          {
            "model": "claude-3-sonnet-20240229",
            "max_tokens": 1000,
            "messages": [
              {
                "role": "user",
                "content": "Проанализируй этот PR и предложи улучшения:\nDIFF_PLACEHOLDER"
              }
            ]
          }
          EOF

          # Подставляем diff, читая его прямо из файла
          awk 'NR==FNR {diff=$0; next} {gsub(/DIFF_PLACEHOLDER/, diff)}1' diff.json request.json > request_filled.json
          mv request_filled.json request.json

      - name: Call Claude API
        run: |
          # Отправляем запрос и логируем полный ответ
          curl -s https://api.anthropic.com/v1/messages \
            -H "x-api-key: ${{ secrets.CLAUDE_API_KEY }}" \
            -H "content-type: application/json" \
            -d @request.json | tee api_response.json

          RESPONSE=$(jq -r '.content[0].text // "❌ Claude не вернул ответа"' api_response.json)

          echo "$RESPONSE" > response.txt
          gh pr comment ${{ github.event.issue.number }} --body-file response.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
