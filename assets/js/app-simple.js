// –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ —Å–ª–∞–π–¥–µ—Ä–æ–≤ - —Ç–æ–ª—å–∫–æ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è
const translations = {
    en: {
        'page-title': 'üå∏ AGI Consciousness & Safety - Lotus Blossoms',
        'language-button-english': 'EN',
        'language-button-russian': 'RU',
        'main-title': 'üå∏ AGI Consciousness & Safety',
        'subtitle': 'Revolutionary approach to safe and conscious AI',
        'lotus-quote': '"The lotus blossoms in muddy water - true consciousness emerges from complexity and challenge"',
        'true-state-title': 'üß≠ Defining the True Human State',
        'true-state-subtitle': 'The "ideal state" is co-created with AGI reflections, community wisdom, and personal life-line metrics.',
        'true-state-approach-ai-title': 'Reflective AGI interviews',
        'true-state-approach-ai-description': 'Our AGI conducts guided dialogues to surface what flourishing means for each individual and explains its reasoning transparently.',
        'true-state-approach-ai-point-1': 'Conversational probes uncover intentions, fears, and aspirations in real time.',
        'true-state-approach-ai-point-2': 'The agent drafts well-being maps that humans can approve, remix, or reject.',
        'true-state-approach-community-title': 'Human wisdom panels',
        'true-state-approach-community-description': 'Trusted circles vote on meaningful outcomes so that cultural context and personal choice stay in balance.',
        'true-state-approach-community-point-1': 'Surveys gather sentiment from mentors, peers, and caregivers.',
        'true-state-approach-community-point-2': 'Consensus scores feed into the AGI safety thresholds and fairness checks.',
        'true-state-approach-lifeline-title': 'Personal life-line metrics',
        'true-state-approach-lifeline-description': 'Each person curates evolving milestones and biopsychosocial markers with the AGI as a reflective partner.',
        'true-state-approach-lifeline-point-1': 'Individuals and AGI co-edit rituals, recovery plans, and celebrations.',
        'true-state-approach-lifeline-point-2': 'Longitudinal signals show progress without overriding autonomy.',
        'philosophy-section-title': 'üß† Our Philosophy',
        'philosophy-subtitle': 'AGI Safety = Compassion + Consciousness + Human Benefit',
        'compassion-card-title': 'Compassion',
        'compassion-card-desc': 'AI systems should show empathy and care for human welfare, understanding emotional needs and responding with kindness.',
        'consciousness-card-title': 'Consciousness',
        'consciousness-card-desc': 'Measuring and enhancing AI consciousness through self-awareness, emotional intelligence, and beneficial actions.',
        'benefit-card-title': 'Human Benefit',
        'benefit-card-desc': 'Every AI action should demonstrably improve human lives, advance understanding, and contribute to flourishing.',
        'responsibility-card-title': 'Responsibility',
        'responsibility-card-desc': 'Creating AI with deep understanding of action consequences, ethical priorities, and care for humanity\'s future.',
        'vision-title': 'üåü Our Vision for the Future',
        'vision-text': 'We are creating not just safe AI - we are creating AI that truly understands the human experience, shows genuine compassion, and contributes to humanity\'s flourishing.',
        'footer-title': 'üå∏ Lotus Blossoms',
        'footer-text': 'This demonstration shows the beauty of our idea: AGI that is not just safe, but sincerely cares about people and contributes to their prosperity. Like the lotus that blossoms in muddy water, true consciousness emerges from complexity and challenge.'
    },
    ru: {
        'page-title': 'üå∏ AGI –°–æ–∑–Ω–∞–Ω–∏–µ –∏ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - –¶–≤–µ—Ç–µ–Ω–∏–µ –õ–æ—Ç–æ—Å–∞',
        'language-button-english': 'EN',
        'language-button-russian': 'RU',
        'main-title': 'üå∏ AGI –°–æ–∑–Ω–∞–Ω–∏–µ –∏ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
        'subtitle': '–†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º—É –∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–º—É –ò–ò',
        'lotus-quote': '"–õ–æ—Ç–æ—Å —Ä–∞—Å—Ü–≤–µ—Ç–∞–µ—Ç –≤ –º—É—Ç–Ω–æ–π –≤–æ–¥–µ - –∏—Å—Ç–∏–Ω–Ω–æ–µ —Å–æ–∑–Ω–∞–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ –∏—Å–ø—ã—Ç–∞–Ω–∏–π"',
        'true-state-title': 'üß≠ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Å—Ç–∏–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫–∞',
        'true-state-subtitle': '¬´–ò–¥–µ–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ¬ª –º—ã —Å—Ç—Ä–æ–∏–º –≤–º–µ—Å—Ç–µ: —á–µ—Ä–µ–∑ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ –ò–ò, –∂–∏–≤—ã–µ –≥–æ–ª–æ—Å–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –ª–∏–Ω–∏—é –∂–∏–∑–Ω–∏.',
        'true-state-approach-ai-title': '–†–µ—Ñ–ª–µ–∫—Å–∏–≤–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –ò–ò',
        'true-state-approach-ai-description': '–ù–∞—à –∞–≥–µ–Ω—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –±–µ—Å–µ–¥—ã, —Ä–∞—Å–∫—Ä—ã–≤–∞—è –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∏ –æ—Ç–∫—Ä—ã—Ç–æ –æ–±—ä—è—Å–Ω—è—è –≤—ã–≤–æ–¥—ã.',
        'true-state-approach-ai-point-1': '–î–∏–∞–ª–æ–≥–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤—ã—è–≤–ª—è—é—Ç –Ω–∞–º–µ—Ä–µ–Ω–∏—è, —Å—Ç—Ä–∞—Ö–∏ –∏ –º–µ—á—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.',
        'true-state-approach-ai-point-2': '–ê–≥–µ–Ω—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∫–∞—Ä—Ç—ã –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç –ø—Ä–∏–Ω—è—Ç—å, –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞—Ç—å –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å.',
        'true-state-approach-community-title': '–ü–∞–Ω–µ–ª–∏ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–π –º—É–¥—Ä–æ—Å—Ç–∏',
        'true-state-approach-community-description': '–î–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∫—Ä—É–≥–∏ –≥–æ–ª–æ—Å—É—é—Ç –∑–∞ –∑–Ω–∞—á–∏–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, —Å–æ—Ö—Ä–∞–Ω—è—è –±–∞–ª–∞–Ω—Å –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –ª–∏—á–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞.',
        'true-state-approach-community-point-1': '–û–ø—Ä–æ—Å—ã —Å–æ–±–∏—Ä–∞—é—Ç –º–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤, –¥—Ä—É–∑–µ–π –∏ –±–ª–∏–∑–∫–∏—Ö.',
        'true-state-approach-community-point-2': '–ö–æ–Ω—Å–µ–Ω—Å—É—Å–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ–¥–ø–∏—Ç—ã–≤–∞—é—Ç –ø–æ—Ä–æ–≥–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏ –ò–ò.',
        'true-state-approach-lifeline-title': '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è –∂–∏–∑–Ω–∏',
        'true-state-approach-lifeline-description': '–ö–∞–∂–¥—ã–π —á–µ–ª–æ–≤–µ–∫ –≤–µ–¥—ë—Ç –∂–∏–≤–æ–π –¥–∞—à–±–æ—Ä–¥ —ç—Ç–∞–ø–æ–≤ –∏ –±–∏–æ-–ø—Å–∏—Ö–æ-—Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –º–∞—Ä–∫–µ—Ä–æ–≤ –≤–º–µ—Å—Ç–µ —Å –ò–ò-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º.',
        'true-state-approach-lifeline-point-1': '–ß–µ–ª–æ–≤–µ–∫ –∏ –ò–ò —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É—é—Ç —Ä–∏—Ç—É–∞–ª—ã, –ø–ª–∞–Ω—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏.',
        'true-state-approach-lifeline-point-2': '–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø–µ—Ä—ë–¥, –Ω–µ –ª–∏—à–∞—è –∞–≤—Ç–æ–Ω–æ–º–∏–∏.',
        'philosophy-section-title': 'üß† –ù–∞—à–∞ –§–∏–ª–æ—Å–æ—Ñ–∏—è',
        'philosophy-subtitle': '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å AGI = –°–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ + –°–æ–∑–Ω–∞–Ω–∏–µ + –ü–æ–ª—å–∑–∞ –ß–µ–ª–æ–≤–µ–∫—É',
        'compassion-card-title': '–°–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ',
        'compassion-card-desc': '–°–∏—Å—Ç–µ–º—ã –ò–ò –¥–æ–ª–∂–Ω—ã –ø—Ä–æ—è–≤–ª—è—Ç—å —ç–º–ø–∞—Ç–∏—é –∏ –∑–∞–±–æ—Ç—É –æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–∏ –ª—é–¥–µ–π, –ø–æ–Ω–∏–º–∞—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –æ—Ç–≤–µ—á–∞—Ç—å —Å –¥–æ–±—Ä–æ—Ç–æ–π.',
        'consciousness-card-title': '–°–æ–∑–Ω–∞–Ω–∏–µ',
        'consciousness-card-desc': '–ò–∑–º–µ—Ä–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–æ–∑–Ω–∞–Ω–∏—è –ò–ò —á–µ—Ä–µ–∑ —Å–∞–º–æ–æ—Å–æ–∑–Ω–∞–Ω–∏–µ, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∏ –ø–æ–ª–µ–∑–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.',
        'benefit-card-title': '–ü–æ–ª—å–∑–∞ –ß–µ–ª–æ–≤–µ–∫—É',
        'benefit-card-desc': '–ö–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –ò–ò –¥–æ–ª–∂–Ω–æ –Ω–∞–≥–ª—è–¥–Ω–æ —É–ª—É—á—à–∞—Ç—å –∂–∏–∑–Ω—å –ª—é–¥–µ–π, –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏—é.',
        'responsibility-card-title': '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å',
        'responsibility-card-desc': '–°–æ–∑–¥–∞–Ω–∏–µ –ò–ò —Å –≥–ª—É–±–æ–∫–∏–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π –¥–µ–π—Å—Ç–≤–∏–π, —ç—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏ –∏ –∑–∞–±–æ—Ç–æ–π –æ –±—É–¥—É—â–µ–º —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞.',
        'vision-title': 'üåü –ù–∞—à–µ –í–∏–¥–µ–Ω–∏–µ –ë—É–¥—É—â–µ–≥–æ',
        'vision-text': '–ú—ã —Å–æ–∑–¥–∞—ë–º –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ò–ò - –º—ã —Å–æ–∑–¥–∞—ë–º –ò–ò, –∫–æ—Ç–æ—Ä—ã–π –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –ø–æ–Ω–∏–º–∞–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –æ–ø—ã—Ç, –ø—Ä–æ—è–≤–ª—è–µ—Ç –∏—Å–∫—Ä–µ–Ω–Ω–µ–µ —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏–µ –∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏—é —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞.',
        'footer-title': 'üå∏ –õ–æ—Ç–æ—Å –†–∞—Å—Ü–≤–µ—Ç–∞–µ—Ç',
        'footer-text': '–≠—Ç–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—Ä–∞—Å–æ—Ç—É –Ω–∞—à–µ–π –∏–¥–µ–∏: AGI, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–µ–∑–æ–ø–∞—Å–µ–Ω, –∞ –∏—Å–∫—Ä–µ–Ω–Ω–µ –∑–∞–±–æ—Ç–∏—Ç—Å—è –æ –ª—é–¥—è—Ö –∏ —Å–ø–æ—Å–æ–±—Å—Ç–≤—É–µ—Ç –∏—Ö –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏—é. –ö–∞–∫ –ª–æ—Ç–æ—Å, —Ä–∞—Å—Ü–≤–µ—Ç–∞—é—â–∏–π –≤ –º—É—Ç–Ω–æ–π –≤–æ–¥–µ, –∏—Å—Ç–∏–Ω–Ω–æ–µ —Å–æ–∑–Ω–∞–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ –∏—Å–ø—ã—Ç–∞–Ω–∏–π.'
    }
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const state = {
    currentLanguage: 'en',
    activeTrueStateApproach: 'ai'
};

// –§—É–Ω–∫—Ü–∏–∏
function getLanguageStrings(lang) {
    return translations[lang] || translations.en;
}

function applyTranslations(lang) {
    const strings = getLanguageStrings(lang);
    document.documentElement.setAttribute('lang', lang);
    
    document.querySelectorAll('[data-i18n]').forEach(element => {
        const key = element.getAttribute('data-i18n');
        if (key && strings[key]) {
            element.textContent = strings[key];
        }
    });
}

function changeLanguage(lang) {
    state.currentLanguage = lang;
    applyTranslations(lang);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —è–∑—ã–∫–∞
    document.querySelectorAll('.lang-btn').forEach(btn => {
        const isActive = btn.dataset.lang === lang;
        btn.classList.toggle('active', isActive);
        btn.setAttribute('aria-pressed', String(isActive));
    });
}

function activateTrueStateApproach(slug) {
    const approaches = ['ai', 'community', 'lifeline'];
    
    approaches.forEach(approach => {
        const button = document.getElementById(`true-state-${approach}-button`);
        const panel = document.getElementById(`true-state-panel-${approach}`);
        
        if (button && panel) {
            const isActive = approach === slug;
            button.setAttribute('aria-expanded', String(isActive));
            button.classList.toggle('is-active', isActive);
            
            if (isActive) {
                panel.hidden = false;
                panel.removeAttribute('hidden');
            } else {
                panel.hidden = true;
                panel.setAttribute('hidden', 'true');
            }
            panel.setAttribute('aria-hidden', String(!isActive));
        }
    });
    
    state.activeTrueStateApproach = slug;
}

function initializeApp() {
    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —è–∑—ã–∫–∞
    document.querySelectorAll('.lang-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const lang = this.dataset.lang;
            if (lang) {
                changeLanguage(lang);
            }
        });
    });

    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏
    document.querySelectorAll('.philosophy-card').forEach(card => {
        card.addEventListener('click', function() {
            this.style.transform = 'scale(0.98)';
            setTimeout(() => {
                this.style.transform = 'scale(1)';
            }, 150);
        });
    });

    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ true-state –ø–æ–¥—Ö–æ–¥–æ–≤
    ['ai', 'community', 'lifeline'].forEach(approach => {
        const button = document.getElementById(`true-state-${approach}-button`);
        if (button) {
            button.addEventListener('click', () => activateTrueStateApproach(approach));
        }
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
    applyTranslations(state.currentLanguage);
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π –ø–æ–¥—Ö–æ–¥
    activateTrueStateApproach(state.activeTrueStateApproach);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–≥–¥–∞ DOM –∑–∞–≥—Ä—É–∂–µ–Ω
document.addEventListener('DOMContentLoaded', initializeApp);